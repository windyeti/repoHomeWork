{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["// ---------------------- TABS --------------------------\n$(function() {\n\t// стартовая точка: выставлем первый видимым\n\t$('.tabs-tab:first-child, .tabs-field:first-child').addClass('active');\n\t// навешивем обработчики\n\t$('.tabs-menu').on('click', '.tabs-tab', function(e) {\n\t\t$this = $(this);\n\t\t// сбрасываем предыдущие активные элементы\n\t\t$('.tabs-tab, .tabs-field').each(function() {\n\t\t\t$self = $(this);\n\t\t\t$self.removeClass('active');\n\t\t});\n\t\t$this.addClass('active');\n\t\tvar indexTab = $('.tabs-tab').index($this);\n\t\t$('.tabs-field').eq(indexTab).addClass('active');\n\t});\n\t$('.tabs-menu').on('mousedown', '.tabs-tab', function(e) {\n\t\te.preventDefault();\n\t});\n});\n// ---------------------- END TABS --------------------------\n// ------------------------- FORM ----------------------------var sendForm = (function() {\nvar sendForm = (function() {\n\tvar form = document.getElementsByTagName('form')[0];\n\tvar inputs = form.getElementsByTagName('input');\n\n\tvar methodsValidation = {\n\t\t'name' : function(elem) {\n\t\t\tvar reg = /(^[A-Z]{1}[a-z]+)|(^[А-Я]{1}[а-я]+)/;\n\t\t\treturn reg.test(elem.value);\n\t\t},\n\t\t'phone' : function(elem) {\n\t\t\tvar reg = /\\+\\d \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}/;\n\t\t\treturn reg.test(elem.value);\n\t\t},\n\t\t'email' : function(elem) {\n\t\t\tvar reg = /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\n\t\t\tconsole.log(reg.test(elem.value))\n\t\t\treturn reg.test(elem.value);\n\t\t}\n\t};\n\tfunction sendDataToServer(e) {\n\t\tfor(var i = 0; i < inputs.length; i++) {\n\t\t\tinputs[i].classList.remove('error');\n\t\t}\n\t\te.preventDefault();\n\t\tif( validation() ) {\n\t\t\tconsole.log('все ушло')\n\t\t\tvar succses = document.createElement('div');\n\t\t\tvar succsesText = document.createTextNode('все ушло');\n\t\t\tsuccses.appendChild(succsesText);\n\t\t\tdocument.body.appendChild(succses);\n\t\t} else {\n\t\t\tconsole.log('что-то не так')\n\t\t\tvar err = document.createElement('div');\n\t\t\tvar errorText = document.createTextNode('что-то не так');\n\t\t\terr.appendChild(errorText);\n\t\t\tdocument.body.appendChild(err);\n\t\t}\n\t}\n\tfunction validation() {\n\t\tfor(var i = 0; i < inputs.length; i++) {\n\t\t\tvar inputCurrent = inputs[i];\n\t\t\tif( !methodsValidation[ inputCurrent.name ](inputCurrent) ) {\n\t\t\t\terrorAlarm( inputCurrent );\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\tfunction errorAlarm(elem) {\n\t\telem.classList.add('error');\n\t}\n\treturn {\n\t\tinit : function() {\n\t\t\tform.addEventListener('submit', sendDataToServer, false);\n\t\t}\n\t}\n})();\n// document.getElementsByTagName('form') && sendForm.init();\nsendForm.init();\n// ------------------------- END FORM ----------------------------\n// ----------------------- City --------------------------\n$(function() {\n\tvar $input = $('form input[name=\"city\"]');\n\tvar listCity = '';\n\tvar $resultInput = $('<div id=\"resultInput\" class=\"resultInput\">');\n\n\t$.ajax({\n\t\turl : 'listCity.json',\n\t\tdataType : 'json',\n\t\tsuccess : function(data) {\n\t\t\tlistCity = data.nameCity;\n\t\t\tinit();\n\t\t}\n\t});\n\tfunction init() {\t\n\t\t$input.on('input', function() {\n\t\t\tif($input.val().length < 3) {\n\t\t\t\t$resultInput.addClass('zeroHeight');\n\t\t\t\t$resultInput.empty();\n\t\t\t}\n\t\t\tif($input.val().length >= 3) {\n\t\t\t\t$resultInput.removeClass('zeroHeight');\n\t\t\t\tvar resultСomparison = (function() {\n\t\t\t\t\tvar result = [];\n\t\t\t\t\tfor(var i = 0; i < listCity.length; i++) {\n\t\t\t\t\t\t\tif( listCity[i].toLowerCase().indexOf( $input.val().toLowerCase() ) > -1 ) {\n\t\t\t\t\t\t\t\t\tresult.push( listCity[i] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t\t})();\t\n\t\t\t\tvar $currentList = (function() {\n\n\t\t\t\t\t$resultInput.empty();\n\n\t\t\t\t\t $.each(resultСomparison, function(key, value) {\n\t\t\t\t\t \t$resultInput.append( $('<div>').addClass('city').html(value) );\n\t\t\t\t\t})\n\t\t\t\t\treturn $resultInput;\n\t\t\t\t})();\n\t\t\t\t$currentList.css({\n\t\t\t\t\t'top' : $input.offset().top + $input.height()+ 10,\n\t\t\t\t\t'left' : $input.offset().left,\n\t\t\t\t\t'width' : $input.width()\n\t\t\t\t});\n\t\t\t\t$('body').append( $currentList );\n\t\t\t}\n\n\t\t\t$resultInput.on('click', '.city', function() {\n\t\t\t\t$input.val( $(this).text() );\n\t\t\t\t$resultInput.empty();\n\t\t\t});\n\t\t\t$resultInput.on('mouseover', '.city', function() {\n\t\t\t\t$(this).addClass('draken');\n\t\t\t})\n\t\t\t$resultInput.on('mouseout', '.city', function() {\n\t\t\t\t$(this).removeClass('draken');\n\t\t\t})\n\t\t});\n\t}\n})\n// ----------------------- END City --------------------------\n// //= _partials/palindrom.js\n// //= _partials/generatorJson.js"],"file":"main.js"}